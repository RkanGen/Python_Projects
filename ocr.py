# -*- coding: utf-8 -*-
"""OCR

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZFIeQQyzlT9Ar-dHRE5gDCQnfKWq6-3t
"""

#Install required libraries
!sudo apt install tesseract-ocr
!pip install pytesseract Pillow requests

# Import necessary libraries
import pytesseract
from PIL import Image
import matplotlib.pyplot as plt
import numpy as np
import cv2
import io
import requests

# Set the path to the tesseract executable
pytesseract.pytesseract.tesseract_cmd = r'/usr/bin/tesseract'

def download_image(url):
    """
    Download an image from a URL and return it as a PIL Image object.
    """
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        return Image.open(io.BytesIO(response.content))
    except requests.RequestException as e:
        print(f"Error downloading image: {e}")
        return None

def preprocess_image(image):
    """
    Preprocess the image to improve OCR accuracy.
    """
    # Convert to grayscale
    gray = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2GRAY)

    # Apply thresholding to preprocess the image
    gray = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)[1]

    # Apply dilation to remove noise
    kernel = np.ones((1, 1), np.uint8)
    gray = cv2.dilate(gray, kernel, iterations=1)

    # Apply erosion to remove noise
    gray = cv2.erode(gray, kernel, iterations=1)

    return Image.fromarray(gray)

def perform_ocr(image):
    """
    Perform OCR on the given image and return the extracted text.
    """
    return pytesseract.image_to_string(image)

def display_image_and_text(image, text):
    """
    Display the image and its extracted text side by side.
    """
    plt.figure(figsize=(12, 6))
    plt.subplot(1, 2, 1)
    plt.imshow(image)
    plt.title('Original Image')
    plt.axis('off')

    plt.subplot(1, 2, 2)
    plt.text(0.1, 0.5, text, fontsize=12, wrap=True)
    plt.title('Extracted Text')
    plt.axis('off')

    plt.tight_layout()
    plt.show()

from google.colab import files
from PIL import Image

uploaded = files.upload()
filename = next(iter(uploaded))
original_image = Image.open(filename)

# Now you can use original_image directly, without the download_image function

# Main execution
if __name__ == "__main__":
  preprocessed_image = preprocess_image(original_image)
  extracted_text = perform_ocr(preprocessed_image)
  display_image_and_text(original_image, extracted_text)
  print("Extracted Text:")
  print(extracted_text)

